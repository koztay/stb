version: '2'

volumes:
  postgres_data: {}
  postgres_backup: {}
  static-data: {}
  media-data: {}

services:
  postgres:
    build: ./compose/postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - postgres_backup:/backups
    env_file: .env

  app:
    build: ./app/
    image: koztay/app
    restart: always
    depends_on:
      - postgres
      - redis
    env_file:
      - .env
    expose:
      - "8000"
    volumes:
      - static-data:/usr/src/static_in_env/static_root/
      - media-data:/usr/src/static_in_env/media_root/
    command: /usr/local/bin/gunicorn ecommerce2.wsgi:application -w 2 -b :8000

  celery_worker:
    image: koztay/app
    restart: always
    env_file:
      - .env
    volumes:
      - static-data:/usr/src/static_in_env/static_root/
      - media-data:/usr/src/static_in_env/media_root/
    volumes_from:
      - app
    depends_on:
      - app
      - postgres
      - redis
    links:  # links koymayınca hiç eklemedi taskları... Ama yine çıkartıp da deneyeceğim.
      - app
    command: celery -A ecommerce2 worker -l info # delete  -l info parameters on production

  celery_beat:
    image: koztay/app
    restart: always
    env_file:
      - .env
    depends_on:
      - app
      - postgres
      - redis
    command: celery -A ecommerce2 beat -l info -S django # delete  -l info parameters on production

  web:
    build: ./compose/web
    restart: always
    ports:
      - "80:80"
    volumes:
      - static-data:/usr/src/static_in_env/static_root/
      - media-data:/usr/src/static_in_env/media_root/
    volumes_from:
      - app

  redis:
    build: ./compose/redis
    restart: always
#    ports:
#      - "6379"
    command: redis-server /usr/local/etc/redis/redis.conf
